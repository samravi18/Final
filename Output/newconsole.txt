Error in install.packages : Updating loaded packages
-/                                                                              # A tibble: 6 x 2
  glassShape drinkingMinutes
  <chr>                <dbl>
1 straight             11.6 
2 straight             10.4 
3 straight             17.9 
4 straight              6.96
5 straight             20.4 
6 straight             20.6 
RStudioGD 
        2 

	Two Sample t-test

data:  beer$drinkingMinutes by beer$glassShape
t = 3.3977, df = 17, p-value = 0.003425
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
  2.774455 11.864878
sample estimates:
mean in group straight   mean in group curved 
             14.913000               7.593333 


The downloaded binary packages are in
	/var/folders/kb/btp8zwy14055f2vqq8k7vz580000gn/T//RtmpBtHIyw/downloaded_packages
a/chapter10/chap10e6AgesAtDeathSpanishFlu1918.csv"))
head(flu)
ttest <- double()
rresults18 <- vector()
for(i in 1:10000){
tempSample <- sample(c("death","no death"), size = 10, prob = c(50,50), replace = TRUE)
ttest[i] <- t.test(flu$age, mu = 0)
}
ttest
mean(flu$age)
circadian <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter15/chap15e1KneesWhoSayNight.csv"))
circadian$treatment <- factor(circadian$treatment,
levels = c("control", "knee", "eyes"))
meanShift <- tapply(circadian$shift, circadian$treatment, mean)
sdevShift <- tapply(circadian$shift, circadian$treatment, sd)
n         <- tapply(circadian$shift, circadian$treatment, length)
data.frame(mean = meanShift, std.dev = sdevShift, n = n)
circadianAnova <- lm(shift ~ treatment, data = circadian)
anova(circadianAnova)
circadianAnovaSummary <- summary(circadianAnova)
circadianAnovaSummary$r.squared
kruskal.test(shift ~ treatment, data = circadian)
birdMalariaData <- read.csv(url("http://whitlockschluter.zoology.ubc.ca/wp-content/data/chapter02/chap02e3aBirdMalaria.csv"))
head(birdMalariaData)
birdMalariaData$treatment <- factor(birdMalariaData$treatment,
levels= c("Egg removal", "Control"))
birdMalariaTable <- table(birdMalariaData$response, birdMalariaData$treatment)
birdMalariaTable
addmargins(birdMalariaTable, margin = c(1,2), FUN = sum, quiet = TRUE)
barplot(as.matrix(birdMalariaTable), beside = TRUE)
pdf("bird_malaria_barplot.pdf")
barplot(as.matrix(birdMalariaTable), beside = TRUE)
dev.off()
flu <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter10/chap10e6AgesAtDeathSpanishFlu1918.csv"))
head(flu)
hist(flu$age, right = FALSE)
agesamplemean <- mean(flu$age)
agesamplemean
agesd <- sd(flu$age)
agesd
sqrt(75034)
agesamplemean + ((1.96*agesd)/sqrt(75034))
agesamplemean - ((1.96*agesd)/sqrt(75034))
t.test(flu$age)
ageMean <- vector()
standdevage <- vector()
seage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
seage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (2.26 * seage[i]))
upper [i] <- (ageMean [i] + (2.26 * seage[i]))
}
fractrueMean <- (sum (lower < 43.029 & upper > 43.406, replace = TRUE))/10000
fractrueMean
t.test(flu$age, conf.level = 0.80)
agesamplemean <- mean(flu$age)
agesamplemean
agesd <- sd(flu$age)
agesd
sqrt(75034)
upperlim <- agesamplemean + ((1.28*agesd)/sqrt(75034))
lowerlim <- agesamplemean - ((1.28*agesd)/sqrt(75034))
upperlim
lowerlim
ageMean <- vector()
standdevage <- vector()
seage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
seage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (1.38 * seage[i]))
upper [i] <- (ageMean [i] + (1.38 * seage[i]))
}
fractrueMean <- (sum (lower < 43.09439 & upper > 43.34091, replace = TRUE))/10000
fractrueMean
fish <- read.csv(file.choose())
head(fish)
mean(fish$Indicies)
flu <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter10/chap10e6AgesAtDeathSpanishFlu1918.csv"))
head(flu)
hist(flu$age, right = FALSE)
mean(flu$age)
ageMean <- vector()
standdevage <- vector()
seage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
seage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (2.26 * seage[i]))
upper [i] <- (ageMean [i] + (2.26 * seage[i]))
}
fractrueMean <- (sum (lower < 43.21765 & upper > 43.21765, replace = TRUE))/10000
fractrueMean
t.test(flu$age, conf.level = 0.80)
agesamplemean <- mean(flu$age)
agesamplemean
agesd <- sd(flu$age)
agesd
sqrt(75034)
upperlim <- agesamplemean + ((1.28*agesd)/sqrt(75034))
lowerlim <- agesamplemean - ((1.28*agesd)/sqrt(75034))
upperlim
lowerlim
ageMean <- vector()
standdevage <- vector()
seage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
seage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (1.38 * seage[i]))
upper [i] <- (ageMean [i] + (1.38 * seage[i]))
}
fractrueMean <- (sum (lower < 43.21765 & upper > 43.21765, replace = TRUE))/10000
fractrueMean
ageMean <- vector()
standdevage <- vector()
stderrorage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
seage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (1.38 * stderrorage[i]))
upper [i] <- (ageMean [i] + (1.38 * stderrorage[i]))
}
fractrueMean <- (sum (lower < 43.21765 & upper > 43.21765, replace = TRUE))/10000
fractrueMean
ageMean <- vector()
standdevage <- vector()
seage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
seage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (1.38 * seage[i]))
upper [i] <- (ageMean [i] + (1.38 * seage[i]))
}
fractrueMean <- (sum (lower < 43.21765 & upper > 43.21765, replace = TRUE))/10000
fractrueMean
ageMean <- vector()
standdevage <- vector()
stderrorage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
seage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (1.38 * stderrorage[i]))
upper [i] <- (ageMean [i] + (1.38 * stderrorage[i]))
}
fractrueMean <- (sum (lower < 43.21765 & upper > 43.21765, replace = TRUE))/10000
fractrueMean
ageMean <- vector()
standdevage <- vector()
stderrorage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
stderrorage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (2.26 * stderrorage[i]))
upper [i] <- (ageMean [i] + (2.26 * stderrorage[i]))
}
fractrueMean <- (sum (lower < 43.21765 & upper > 43.21765, replace = TRUE))/10000
fractrueMean
ageMean <- vector()
standdevage <- vector()
stderrorage <- vector ()
lower <- vector ()
upper <- vector ()
for(i in 1:10000){
AgeSample <- sample(flu$age, size = 10, replace = FALSE)
ageMean [i] <- mean(AgeSample)
standdevage [i] <- sd(AgeSample)
stderrorage [i] <- standdevage[i]/(sqrt(10))
lower [i] <- (ageMean [i] - (1.38 * stderrorage[i]))
upper [i] <- (ageMean [i] + (1.38 * stderrorage[i]))
}
fractrueMean <- (sum (lower < 43.21765 & upper > 43.21765, replace = TRUE))/10000
fractrueMean
squirrels <- read_excel(file.choose())
Birds <- read_excel(file.choose())
head(Birds)
squirrel<-read_excel(file.choose())
head(squirrel)
install.packages("readxl")
Yes
library("readxl")
squirrel<-read_excel(file.choose())
head(squirrel)
anova(squirrel)
squirrel<-read_excel(file.choose())
head(squirrel)
squirrel$Treatment <- factor(squirrel$Treatment,
levels = c("Islandabsent", "Islandpresent", "Mainland"))
squirreltreatment <- lm(shift ~ Treatment, data = squirrel)
anova(squirreltreatment)
circadian <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter15/chap15e1KneesWhoSayNight.csv"))
circadian$treatment <- factor(circadian$treatment,
levels = c("control", "knee", "eyes"))
meanShift <- tapply(circadian$shift, circadian$treatment, mean)
sdevShift <- tapply(circadian$shift, circadian$treatment, sd)
n         <- tapply(circadian$shift, circadian$treatment, length)
data.frame(mean = meanShift, std.dev = sdevShift, n = n)
circadianAnova <- lm(shift ~ treatment, data = circadian)
anova(circadianAnova)
circadianAnovaSummary <- summary(circadianAnova)
circadianAnovaSummary$r.squared
kruskal.test(shift ~ treatment, data = circadian)
anova(circadianAnova)
circadianAnovaSummary <- summary(circadianAnova)
squirreltreatment <- lm(shift ~ Treatment, data = squirrel)
anova(squirreltreatment)
histogram(Birds$Kokanee)
hist(Birds$Kokanee)
hist(Birds$lnkokanee)
hist(Birds$Kokanee)
hist(Bird$Sockeye)
hist(Birds$Sockeye)
hist(Birds$lnsockeye)
hist(Birds$lnsockeye, xlim=0,5)
hist(Birds$lnsockeye, xlim=(0,5))
hist(Birds$lnsockeye, breaks= .5, 1, 1.5, 2)
hist(Birds$lnsockeye, breaks= .5)
hist(Birds$lnsockeye, breaks= ".5")
hist(Birds$lnsockeye, breaks= "n + .5")
hist(Birds$lnsockeye, breaks= .5)
hist(Birds$lnsockeye, breaks= 1)
hist(Birds$lnsockeye, breaks= 5)
hist(Birds$lnsockeye, breaks= 12)
hist(Birds$Sockeye, breaks = 12)
hist(Birds$Kokanee, breaks = 12)
hist(Birds$lnkokanee, breaks = 12)
hist(Birds$Kokanee, breaks = 20)
hist(Birds$lnkokanee, breaks = 20)
flu <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter10/chap10e6AgesAtDeathSpanishFlu1918.csv"))
head(flu)
hist(flu$age, right = FALSE)
mean(flu$age)
t.test(Birds$Kokanee, Birds&Sockeye)
t.test(Birds$Kokanee, Birds$Sockeye)
t.test(Birds$Kokanee, Birds$Sockeye, paired = FALSE)
hist(Birds$Sockeye, breaks = 12)
hist(Birds$Kokanee, breaks = 20)
hist(Birds$Kokanee, breaks = 25)
hist(Birds$Kokanee, breaks = 30)
hist(Birds$Kokanee, breaks = 40)
hist(Birds$Kokanee, breaks = 50)
hist(Birds$Kokanee, breaks = 60)
hist(Birds$Kokanee, breaks = 80)
hist(Birds$Kokanee, breaks = 40)
hist(Birds$lnkokanee, breaks = 40)
hist(Birds$lnkokanee, breaks = 80)
hist(Birds$Kokanee)
hist(Birds$lnkokanee)
Birds <- read_excel(file.choose())
head(Birds)
t.test(Birds$Kokanee, Birds$Sockeye, data = Birds, varequal=TRUE)
salmon<-read_csv(file.choose())
head(salmon)
salmon<-read_csv(file.choose())
install.packages("readcsv")
Yes
library(readcsv)
salmon<- read_excel(file.choose())
head(salmon)
install.packages("readxl")
Yes
library("readxl")
salmon<- read_excel(file.choose())
head(salmon)
t.test(salmon$kokanee, salmon$sockeye, data = Birds, varequal=TRUE)
t.test(salmon$kokanee, salmon$sockeye)
t.test(salmon$skinColor ~ salmon$species, data=salmon, var.equal = TRUE)
salmon$lnkokanee<-log(salmon$skinColor)
salmon$lnsockeye<-log(salmon$species)
salmon$lnkokanee<-log(salmon$kokanee)
salmon$lnsockeye<-log(salmon$sockeye)
salmon$lnkokanee<-log(salmon$skinColor)
t.test(salmon$lnkokanee ~ salmon$species, data=salmon, var.equal=TRUE)
t.test(salmon$skinColor ~ salmon$species)
squirrel$Treatment <- factor(squirrel$Treatment,
levels = c("Islandabsent", "Islandpresent", "Mainland"))
squirreltreatment <- lm(shift ~ Treatment, data = squirrel)
anova(squirreltreatment)
lion <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter17/chap17e1LionNoses.csv"))
head(lion)
plot(ageInYears ~ proportionBlack, data = lion)
lionRegression <- lm(ageInYears ~ proportionBlack, data = lion)
summary(lionRegression)
abline(lionRegression)
predict(lionRegression, data.frame(proportionBlack = 0.50), se.fit = TRUE)
anova(lionRegression)
summary(lionRegression)
confint(lionRegression)
summary(lionRegression)
prairie <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter17/chap17e3PlantDiversityAndStability.csv"))
head(prairie)
prairie$logStability <- log(prairie$biomassStability)
head(prairie)
plot(logStability ~ nSpecies, data = prairie)
prairieRegression <- lm(logStability ~ nSpecies, data = prairie)
abline(prairieRegression)
prairieRegression <- lm(logStability ~ nSpecies, data = prairie)
summary(prairieRegression)
confint(prairieRegression)
anova(prairieRegression)
summary(prairieRegression)$r.squared
tigerData <- read.csv(url("http://whitlockschluter.zoology.ubc.ca/wp-content/data/chapter02/chap02e2aDeathsFromTigers.csv"))
head(tigerData)
tigerTable <- sort(table(tigerData$activity), decreasing = TRUE)
tigerTable
barplot(tigerTable, ylab = "Frequency", cex.names = 0.5, las = 2)
pdf("barplot.pdf")
barplot(tigerTable, ylab = "Frequency", cex.names = 0.5, las = 2)
dev.off()
lion <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter17/chap17e1LionNoses.csv"))
head(lion)
lionRegression <-lm(ageInYears ~ proportionBlack,data=lion)
sumary(lionRegression)
out<-capture.output(summary(lionRegression))
cat("Results", out, file="../results/summary.txt", sep="/n", append=FALSE)
algae <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter18/chap18e3IntertidalAlgae.csv"))
head(algae)
algaeFullModel <- lm(sqrtArea ~ height * herbivores, data = algae)
anova(algaeNoInteractModel, algaeFullModel)
interaction.plot(algae$herbivores, algae$height, response = predict(algaeNoInteractModel),
ylim = range(algae$sqrtArea), trace.label = "Height", las = 1,
ylab = "Square root surface area (cm)", xlab = "Herbivore treatment")
adjustAmount = 0.05
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) + adjustAmount),
data = subset(algae, height == "low"))
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) - adjustAmount),
data = subset(algae, height == "mid"), pch = 16)
algae <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter18/chap18e3IntertidalAlgae.csv"))
head(algae)
algaeNoInteractModel <- lm(sqrtArea ~ height + herbivores, data = algae)
algaeFullModel <- lm(sqrtArea ~ height * herbivores, data = algae)
interaction.plot(algae$herbivores, algae$height, response = predict(algaeNoInteractModel),
ylim = range(algae$sqrtArea), trace.label = "Height", las = 1,
ylab = "Square root surface area (cm)", xlab = "Herbivore treatment")
adjustAmount = 0.05
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) + adjustAmount),
data = subset(algae, height == "low"))
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) - adjustAmount),
data = subset(algae, height == "mid"), pch = 16)
interaction.plot(algae$herbivores, algae$height, response = predict(algaeFullModel),
ylim = range(algae$sqrtArea), trace.label = "Height", las = 1,
ylab = "Square root surface area (cm)", xlab = "Herbivore treatment")
adjustAmount = 0.05
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) + adjustAmount),
data = subset(algae, height == "low"))
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) - adjustAmount),
data = subset(algae, height == "mid"), pch = 16)
anova(algaeNoInteractModel, algaeFullModel)
algaeFullModelTypeIII <- lm(sqrtArea ~ height * herbivores, data = algae,
contrasts = list(height = contr.sum, herbivores = contr.sum))
library(car)
Anova(algaeFullModelTypeIII, type = "III") # note "A" in Anova is capitalized
algaeFullModelTypeIII <- lm(sqrtArea ~ height * herbivores, data = algae,
contrasts = list(height = contr.sum, herbivores = contr.sum))
library(car)
Anova(algaeFullModelTypeIII, type = "III") # note "A" in Anova is capitalized
algae <- read.csv(url("http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter18/chap18e3IntertidalAlgae.csv"))
head(algae)
algaeNoInteractModel <- lm(sqrtArea ~ height + herbivores, data = algae)
algaeFullModel <- lm(sqrtArea ~ height * herbivores, data = algae)
interaction.plot(algae$herbivores, algae$height, response = predict(algaeNoInteractModel),
ylim = range(algae$sqrtArea), trace.label = "Height", las = 1,
ylab = "Square root surface area (cm)", xlab = "Herbivore treatment")
adjustAmount = 0.05
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) + adjustAmount),
data = subset(algae, height == "low"))
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) - adjustAmount),
data = subset(algae, height == "mid"), pch = 16)
interaction.plot(algae$herbivores, algae$height, response = predict(algaeFullModel),
ylim = range(algae$sqrtArea), trace.label = "Height", las = 1,
ylab = "Square root surface area (cm)", xlab = "Herbivore treatment")
adjustAmount = 0.05
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) + adjustAmount),
data = subset(algae, height == "low"))
points(sqrtArea ~ c(jitter(as.numeric(herbivores), factor = 0.2) - adjustAmount),
data = subset(algae, height == "mid"), pch = 16)
anova(algaeNoInteractModel, algaeFullModel)
algaeFullModelTypeIII <- lm(sqrtArea ~ height * herbivores, data = algae,
contrasts = list(height = contr.sum, herbivores = contr.sum))
library(car)
anova(algaeFullModelTypeIII, type = "III")
anova(algaeFullModel)
read.excel(file.choose())
install.packages("readxl")
Yes
library("readxl")
beer <- read.excel(file.choose())
head(beer)
beer <- read_excel(file.choose())
head(beer)
boxplot(glassShape ~ drinkingMinutes, data = beer)
stripchart(glassShape ~ drinkingMinutes, data = beer, method = "jitter",
vertical = TRUE)
t.test(beer$glassShape, beer$drinkingMinutes)
install.packages("readxl")
Yes
library("readxl")
beer <- read_excel(file.choose())
head(beer)
beer$glassShape <- factor(beer$glassShape, levels = c("straight", "curved"))
pdf("Beerboxplot.pdf")
boxplot(drinkingMinutes ~ glassShape, data = beer)
dev.off()
t.test(beer$drinkingMinutes ~ beer$glassShape, data = beer, var.equal = TRUE)
sink("consoleoutput.txt")
install.packages("readxl")
Yes
library("readxl")
beer <- read_excel(file.choose())
head(beer)
beer$glassShape <- factor(beer$glassShape, levels = c("straight", "curved"))
pdf("Beerboxplot.pdf")
boxplot(drinkingMinutes ~ glassShape, data = beer)
dev.off()
t.test(beer$drinkingMinutes ~ beer$glassShape, data = beer, var.equal = TRUE)
sink("consoleoutput.txt")
install.packages("readxl")
install.packages("readxl")
Yes
library("readxl")
beer <- read_excel(file.choose())
head(beer)
beer$glassShape <- factor(beer$glassShape, levels = c("straight", "curved"))
pdf("Beerboxplot.pdf")
boxplot(drinkingMinutes ~ glassShape, data = beer)
dev.off()
t.test(beer$drinkingMinutes ~ beer$glassShape, data = beer, var.equal = TRUE)
install.packages("readxl")
boxplot(drinkingMinutes ~ glassShape, data = beer)
sink("console.txt")
savehistory("console.txt")
t.test(beer$drinkingMinutes ~ beer$glassShape, data = beer, var.equal = TRUE)
install.packages("readxl")
Yes
library("readxl")
beer <- read_excel(file.choose())
head(beer)
install.packages("readxl")
head(beer)
beer$glassShape <- factor(beer$glassShape, levels = c("straight", "curved"))
t.test(beer$drinkingMinutes ~ beer$glassShape, data = beer, var.equal = TRUE)
t.test(beer$drinkingMinutes ~ beer$glassShape, data = beer, var.equal = TRUE)
install.packages("readxl")
Yes
library("readxl")
beer <- read_excel(file.choose())
head(beer)
beer$glassShape <- factor(beer$glassShape, levels = c("straight", "curved"))
pdf("Beerboxplot.pdf")
boxplot(drinkingMinutes ~ glassShape, data = beer)
dev.off()
t.test(beer$drinkingMinutes ~ beer$glassShape, data = beer, var.equal = TRUE)
install.packages("readxl")
sink("newconsole.txt")
savehistory("newconsole.txt")
